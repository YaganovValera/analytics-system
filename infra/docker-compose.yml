
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: analytics
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.78.0
    container_name: otel-collector
    command: ["--config=/etc/otel/otel-collector-config.yaml"]
    volumes:
      - ./monitoring/otel/otel-collector-config.yaml:/etc/otel/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"
    networks:
      - backend
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    networks:
      - monitoring

  market-data-collector:
    build:
      context: ../services/market-data-collector
      dockerfile: Dockerfile
    container_name: market-data-collector
    depends_on:
      - kafka
      - otel-collector
    environment:
      - BINANCE_WS_URL=wss://stream.binance.com:9443/ws
      - BINANCE_SYMBOLS=btcusdt,ethusdt
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=marketdata.raw
      - TELEMETRY_OTEL_COLLECTOR=otel-collector:4317
    networks:
      - backend

  preprocessor:
    build:
      context: ../services/preprocessor
      dockerfile: Dockerfile
    container_name: preprocessor
    depends_on:
      - kafka
      - redis
      - otel-collector
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_GROUP_ID=preprocessor-group
      - KAFKA_TOPIC=marketdata.raw
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
      - REDIS_TTL_SECONDS=3600
      - TELEMETRY_OTEL_COLLECTOR=otel-collector:4317
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
  monitoring:
