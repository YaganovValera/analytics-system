// proto/v1/auth.proto
syntax = "proto3";

package market.auth;

option go_package = "github.com/YaganovValera/analytics-system/proto/v1/generate/auth;authpb";


import "google/protobuf/empty.proto";

// Запрос на логин.
message LoginRequest {
  string username = 1;
  string password = 2;
}

// Ответ с access/refresh-токенами.
message LoginResponse {
  // JWT access-токен.
  string access_token  = 1;
  // JWT refresh-токен.
  string refresh_token = 2;
  // Время жизни access-токена в секундах.
  int64  expires_in     = 3;
}

// Запрос валидации access-токена.
message ValidateTokenRequest {
  // JWT токен.
  string token = 1;
}

// Ответ валидации токена.
message ValidateTokenResponse {
  // Валиден ли токен.
  bool   valid    = 1;
  // Имя пользователя, к которому привязан токен.
  string username = 2;
  // Роли пользователя, например \"admin\", \"viewer\".
  repeated string roles    = 3;
}

// Запрос на обновление токена.
message RefreshTokenRequest {
  // Refresh-токен.
  string refresh_token = 1;
}

// Ответ с новым набором токенов.
message RefreshTokenResponse {
  string access_token  = 1;
  string refresh_token = 2;
  int64  expires_in     = 3;
}

// Запрос на отзыв конкретного токена.
message RevokeTokenRequest {
  // Токен (access или refresh) для отзыва.
  string token = 1;
  // Тип токена.
  TokenType type  = 2;
}

// Ответ на ревокацию токена.
message RevokeTokenResponse {
  // true, если токен успешно отозван.
  bool revoked = 1;
}

// Тип токена для ревокации: ACCESS или REFRESH.
enum TokenType {
  TOKEN_TYPE_UNSPECIFIED = 0;
  TOKEN_TYPE_ACCESS      = 1;
  TOKEN_TYPE_REFRESH     = 2;
}

// Сервис аутентификации/авторизации.
service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  // Выход: access-токен из metadata будет удалён.
  rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc RevokeToken(RevokeTokenRequest) returns (RevokeTokenResponse);
}