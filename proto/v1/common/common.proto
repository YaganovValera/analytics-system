syntax = "proto3";

package market.common.v1;
option go_package = "github.com/YaganovValera/analytics-system/proto/gen/go/v1/common;commonpb";

import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

// Pagination parameters for paginated API responses.
message Pagination {
  // Number of results to return per page.
  int32 page_size = 1;

  // Token to retrieve the next page of results.
  string page_token = 2;
}

// Metadata provided with every request for observability and tracing.
message RequestMetadata {
  // IP address of the client.
  string ip_address = 1;

  // User agent string.
  string user_agent = 2;

  // Trace ID for distributed tracing systems (e.g. OpenTelemetry).
  string trace_id = 3;
}

// Supported aggregation intervals for analytics queries.
enum AggregationInterval {
  AGG_INTERVAL_UNSPECIFIED = 0;
  AGG_INTERVAL_1_MINUTE = 1;
  AGG_INTERVAL_5_MINUTES = 2;
  AGG_INTERVAL_15_MINUTES = 3;
  AGG_INTERVAL_1_HOUR = 4;
  AGG_INTERVAL_4_HOURS = 5;
  AGG_INTERVAL_1_DAY = 6;
}

// Request to retrieve a paginated list of available market symbols.
message ListSymbolsRequest {
  Pagination pagination = 1;
  RequestMetadata metadata = 2;
}

// Response containing available market symbols.
message ListSymbolsResponse {
  repeated string symbols = 1;
  string next_page_token = 2;
}

service CommonService {
  rpc ListSymbols(ListSymbolsRequest) returns (ListSymbolsResponse);
}
